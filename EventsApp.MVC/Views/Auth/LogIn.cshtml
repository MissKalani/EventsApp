@using Microsoft.Owin.Security
@model EventsApp.MVC.ViewModels.HellViewModel
@{
    ViewBag.Title = "Log In";
}

<h2>@ViewBag.Title.</h2>
<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("Login", "Auth", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                @Html.AntiForgeryToken()
                <h4>Use a local account to log in.</h4>
                <hr />
                @Html.ValidationSummary(true)
                <div class="form-group">
                    @Html.LabelFor(m => m.LoginUserViewModel.UserName, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.LoginUserViewModel.UserName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.LoginUserViewModel.UserName)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.LoginUserViewModel.Password, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.PasswordFor(m => m.LoginUserViewModel.Password, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.LoginUserViewModel.Password)
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.LoginUserViewModel.RememberMe)
                            @Html.LabelFor(m => m.LoginUserViewModel.RememberMe)
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Log In" class="btn btn-default" />
                    </div>
                </div>
                <p>
                    @Html.ActionLink("Register", "Register") if you don't have a local account.
                </p>
            }
        </section>
        <div>
            @{
                var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
                using (Html.BeginForm("ExternalLogin", "Auth", new { ReturnUrl = Url.Action("Index", "Home") }))
                {
                    @Html.AntiForgeryToken()
                    <div id="socialLoginList">
                        <p>
                            @foreach (AuthenticationDescription p in loginProviders)
                            {
                                <button type="submit" class="btn btn-primary" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>
                            }
                        </p>
                    </div>
                }
            }
        </div>

    </div>
</div> <!--endrow-->

@section Scripts{}